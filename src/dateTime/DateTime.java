package dateTime;

import java.sql.Date;
import java.sql.Timestamp;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.ZonedDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.TreeSet;

public class DateTime {

	
	public static void main(String[] args) {
		
		
		
		System.out.println(LocalDateTime.now());
		
		ZonedDateTime z=ZonedDateTime.of(LocalDateTime.now(), ZoneId.of("America/New_York"));
		
		ZonedDateTime z1=ZonedDateTime.now();
		ZonedDateTime z2=ZonedDateTime.now(ZoneId.of("GMT"));
		Timestamp ts=Timestamp.valueOf(z2.toLocalDateTime());
		System.out.println("2 "+z);
		System.out.println("3 "+z1);
		System.out.println("4 "+z2);
		System.out.println("5 "+z2.toLocalDateTime());
		java.util.Date sd=Date.from(z2.toInstant());
		
		/*
		 * Date pk=(Date)
		 * Date.from(java.time.ZonedDateTime.now(ZoneId.of("GMT")).toInstant());
		 * 
		 * System.out.println("pk "+pk);
		 */	
		System.out.println(ts.getTime());
		
		
		List<String> t=get();
		
		System.out.println(t);
		Timestamp tsd;
		String after="10:00";
	
TreeSet<Timestamp> d=new TreeSet<Timestamp>();
		
		for(String s:t)
		{
			 d.add(new Timestamp(Long.parseLong(s)));
				
		}
		
		System.out.println(d);
		
		
	}
	
	
	public static List<String> get()
	{
		String a[]= {"1583296200000",
				"1583276400000",
				"1304110500000",
				"1583308860000",
				"1583279820000",
				"1583298000000",
				"1390908147000",
				"1583222685000",
				"1583233200000",
				"1583479800000",
				"1583299800000",
				"1583245800000",
				"1583298000000",
				"1521464400000",
				"1583298300000",
				"1397225001000",
				"1583362200000",
				"1583365500000",
				"1583260800000",
				"1583535000000",
				"1583261100000",
				"1583265600000",
				"1583261100000",
				"4072751999000",
				"1588402799000",
				"1583283600000",
				"1521464400000",
				"1583254800000",
				"1583290800000",
				"1583276400000",
				"1583222700000",
				"1583223300000",
				"1583276400000",
				"1583298600000",
				"2524669200000",
				"1583287200000",
				"1583254800000",
				"1583269200000",
				"1583550000000",
				"1583262000000",
				"1583290800000",
				"1583283600000",
				"1583269200000",
				"1583226000000",
				"1583244000000",
				"1583262000000",
				"1583308800000",
				"1583265600000",
				"1583237700000",
				"1583260800000",
				"1588402799000",
				"1583358300000",
				"1583226000000",
				"1583451900000",
				"1583362800000",
				"1583358000000",
				"1583790600000",
				"1583347500000",
				"1583352000000",
				"1583347200000",
				"1583444700000",
				"1583449200000",
				"1583444400000",
				"1583347500000",
				"1583352000000",
				"1583347200000",
				"4072751999000",
				"1583276400000",
				"1552719599000",
				"4072751999000",
				"4072751999000",
				"4072751999000",
				"1583433900000",
				"4072665599000",
				"1583530800000",
				"1585810799000",
				"4072751999000",
				"4072751999000",
				"4072751999000",
				"1583438400000",
				"1591081199000",
				"1583433600000",
				"1583531100000",
				"1583535600000",
				"1588402799000",
				"1583538300000",
				"1583880600000",
				"1583433900000",
				"1583438400000",
				"1583433600000",
				"4100745599000",
				"4072751999000",
				"4072751999000",
				"4072751999000",
				"4072751999000",
				"4072751999000",
				"4072751999000",
				"1588402799000",
				"1596351599000",
				"1599029999000",
				"1583362800000",
				"1583520300000",
				"1591081199000",
				"1593673199000",
				"1583524800000",
				"1583520000000",
				"1583520300000",
				"1583524800000",
				"1583520000000",
				"1583520300000",
				"1588402799000",
				"1583524800000",
				"1583271900000",
				"4072751999000",
				"1583276400000",
				"1583271600000",
				"1583279100000",
				"1583448600000",
				"4072751999000",
				"4072751999000",
				"4072751999000",
				"4072751999000",
				"1585810799000",
				"1583275800000",
				"4072751999000"};

	return Arrays.asList(a);
	}
	
	
}

